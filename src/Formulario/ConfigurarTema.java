/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formulario;
import Clases.Conexion;
import Clases.Sonidos;
import java.sql.*;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author maico
 */
public class ConfigurarTema extends javax.swing.JInternalFrame {
    Sonidos I= new Sonidos();

    /**
     * Creates new form ConfigurarTema
     */
    public ConfigurarTema() {
        initComponents();
        Rellenarcombo();
        cargar();
        mensaje();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Temas = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Aceptar = new javax.swing.JButton();
        Cerrar = new javax.swing.JButton();

        setTitle("PERSONALIZACION");

        jLabel1.setText("Selecciona Un tema:");

        Aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Checkmark_32px.png"))); // NOI18N
        Aceptar.setText("Aceptar");
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });

        Cerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Delete_32px.png"))); // NOI18N
        Cerrar.setText("Cerrar");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addGap(33, 33, 33)
                        .addComponent(Temas, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(Aceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Cerrar)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Temas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Aceptar)
                    .addComponent(Cerrar))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void mensaje(){
        I.notificacion();
        JOptionPane.showMessageDialog(null,"Atencion si desea cambiar el tema el sistema necesita un reinicio es recomendable que cierre todas las ventanas en uso","Mensaje de Advertencia",JOptionPane.WARNING_MESSAGE);

    }
    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
        // TODO add your handling code here:
        String seleccion =Temas.getSelectedItem().toString();
        String sql="UPDATE Temas SET Tema = '"+seleccion+"'WHERE ID = '1'";
        try {
        PreparedStatement pst = cn.prepareStatement(sql);
        pst.executeUpdate();
        cargar();
        Reiniciar();
    } catch (SQLException e) {
        System.err.print(e);
        }    
    }//GEN-LAST:event_AceptarActionPerformed

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_CerrarActionPerformed
    private void Reiniciar() throws SQLException{
        I.notificacion();
        Object [] opciones ={"Reiniciar","Cancelar"};
        int eleccion = JOptionPane.showOptionDialog(rootPane,"Para aplicar los cambios correctamente es necesario reiniciar el sistema","Mensaje de Confirmacion",
        JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == JOptionPane.YES_OPTION)
            {
                I.Clic();
                System.exit(0);
            }else{
            I.Clic();}
    }
    
    
    private void cargar(){
        try {
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery("Select Tema from Temas where ID = '1' ");
            while(rs.next()){
                Temas.setSelectedItem(rs.getString("Tema"));}}
        catch (SQLException ex){
            Logger.getLogger(ConfigurarTema.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,ex);
            }
    }
    private void Rellenarcombo(){
    try {
        Temas.removeAllItems();
        Statement st=cn.createStatement();
        ResultSet rs=st.executeQuery("Select Nombre from TodosTemas");
        Temas.addItem("Seleccione una opcion");    
        
        while(rs.next()){
            Temas.addItem(rs.getString("Nombre"));}}
           
           catch (SQLException ex) {
            Logger.getLogger(IngresoProductos.class.getName()).log(Level.SEVERE, null, ex);
            
            JOptionPane.showMessageDialog(null,ex);
        }}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Cerrar;
    private javax.swing.JComboBox<String> Temas;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    Conexion cc = new Conexion();
   Connection cn = cc.conexion();
}
