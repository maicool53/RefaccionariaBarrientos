/*
 * BuscarClientes.java
 *
 * @author Miguel
 */
package Formulario;

import Clases.Conexion;
import Clases.Sonidos;
import java.io.InputStream;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Miguel
 */
public class BuscarClientes extends javax.swing.JInternalFrame {
      
    public BuscarClientes() {
        initComponents();
        ClaseCliente.setEnabled(false);
        Cargarlistaclientes();
    }
    private void Cargarlistaclientes()          
    {
        DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"Codigo","Nombres","Apellidos","Sexo","Clase","Telefono","Email","Dirección"};
        modelo.setColumnIdentifiers(Titulos);
         this.tbclientes.setModel(modelo);
        try {
            
            String ConsultaSQL="SELECT * FROM cliente";
        
            String []registros= new String[9];
           
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("cod_cli");
                registros[1]=rs.getString("nom_cli");
                registros[2]=rs.getString("ape_cli");  
                registros[3]=rs.getString("sexo_cli");
                registros[4]=rs.getString("clas_cli");
                registros[5]=rs.getString("tel_cli");
                registros[6]=rs.getString("email_cli");
                registros[7]=rs.getString("dir_cli");
                modelo.addRow(registros);
                                
            }
            tbclientes.setModel(modelo);
            txtcant.setText(""+tbclientes.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(BuscarClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        radioclase = new javax.swing.JRadioButton();
        radiotodo = new javax.swing.JRadioButton();
        radionombre = new javax.swing.JRadioButton();
        ClaseCliente = new javax.swing.JComboBox();
        txtnombre = new javax.swing.JTextField();
        btnimprimir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbclientes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtcant = new javax.swing.JTextField();

        setBorder(null);
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CONSULTA DE CLIENTES");

        buttonGroup1.add(radioclase);
        radioclase.setText("Buscar Clientes por Clase:");
        radioclase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioclaseActionPerformed(evt);
            }
        });

        buttonGroup1.add(radiotodo);
        radiotodo.setText("Mostrar todos los clientes");
        radiotodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiotodoActionPerformed(evt);
            }
        });

        buttonGroup1.add(radionombre);
        radionombre.setSelected(true);
        radionombre.setText("Buscar Cliente Por Nombre:");
        radionombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radionombreActionPerformed(evt);
            }
        });

        ClaseCliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "A", "B", "C", "D", "E", "F" }));
        ClaseCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ClaseClienteItemStateChanged(evt);
            }
        });

        txtnombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtnombreKeyReleased(evt);
            }
        });

        btnimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Print_32px.png"))); // NOI18N
        btnimprimir.setText("Imprimir");
        btnimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radiotodo)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(radioclase)
                                .addGap(24, 24, 24)
                                .addComponent(ClaseCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(radionombre)
                                .addGap(16, 16, 16)
                                .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(298, 298, 298)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnimprimir)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radionombre)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnimprimir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioclase)
                    .addComponent(ClaseCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radiotodo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbclientes.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        tbclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombres", "Apellidos", "Sexo", "Clase", "Telefono", "Email", "Dirección"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbclientes);
        if (tbclientes.getColumnModel().getColumnCount() > 0) {
            tbclientes.getColumnModel().getColumn(3).setResizable(false);
            tbclientes.getColumnModel().getColumn(3).setPreferredWidth(30);
            tbclientes.getColumnModel().getColumn(4).setResizable(false);
            tbclientes.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        jLabel1.setText("Cantidad de Registros");

        txtcant.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtcant, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtcant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void radioclaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioclaseActionPerformed
// TODO add your handling code here:
    if(radioclase.isSelected()==true)
    {
        txtnombre.setEnabled(false);
        ClaseCliente.setEnabled(true);
        ClaseCliente.setSelectedItem("Seleccione...");

    }
}//GEN-LAST:event_radioclaseActionPerformed

private void radiotodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiotodoActionPerformed
// TODO add your handling code here:
    Cargarlistaclientes();
    ClaseCliente.setEnabled(false);
    ClaseCliente.setSelectedItem("Seleccione...");
    txtnombre.setEnabled(false);
}//GEN-LAST:event_radiotodoActionPerformed

    private void radionombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radionombreActionPerformed
if(radionombre.isSelected()==true)
    {
        txtnombre.setEnabled(true);
        ClaseCliente.setSelectedItem("Seleccione...");
        ClaseCliente.setEnabled(false);
        
    }        // TODO add your handling code here:
    }//GEN-LAST:event_radionombreActionPerformed

    private void txtnombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnombreKeyReleased
        // TODO add your handling code here:
        DefaultTableModel modelo= new DefaultTableModel();
        String valor= txtnombre.getText();
        String[]titulos={"Codigo","Nombre","Apellidos","Sexo","Clase","Telefono","Email","Dirección"} ;  
        String []Registros= new String[8];
        modelo=new DefaultTableModel(null,titulos);
        String Sql="SELECT * FROM cliente WHERE CONCAT(cod_cli,nom_cli,ape_cli,clas_cli,email_cli,dir_cli) LIKE '%"+valor+"%'";
       
        try {
             Statement st = cn.createStatement();
             ResultSet rs = st.executeQuery(Sql);
             while(rs.next())
             {
                 Registros[0]= rs.getString("cod_cli");
                  Registros[1]= rs.getString("nom_cli");
                  Registros[2]= rs.getString("ape_cli");
                  Registros[3]= rs.getString("sexo_cli");
                  Registros[4]= rs.getString("clas_cli");
                  Registros[5]= rs.getString("tel_cli");
                  Registros[6]= rs.getString("email_cli");
                  Registros[7]= rs.getString("dir_cli");   
                 modelo.addRow(Registros);
             } 
             tbclientes.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(EnviarClientesFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
     
        
        
    }//GEN-LAST:event_txtnombreKeyReleased

    private void ClaseClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ClaseClienteItemStateChanged
        // TODO add your handling code here:
        String clase= ClaseCliente.getSelectedItem().toString();
        
        DefaultTableModel modelo= new DefaultTableModel();
       String []Titulos = {"Codigo","Nombre","Apellidos","Sexo","Clase","Telefono","Email","Dirección"};
       modelo.setColumnIdentifiers(Titulos);
       this.tbclientes.setModel(modelo);
       try {
            
            String ConsultaSQL="SELECT * FROM cliente WHERE clas_cli='"+clase+"'";
        
            String []registros= new String[9];
           
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("cod_cli");
                registros[1]=rs.getString("nom_cli");
                registros[2]=rs.getString("ape_cli");  
                registros[3]=rs.getString("sexo_cli");
                registros[4]=rs.getString("clas_cli");
                registros[5]=rs.getString("tel_cli");
                registros[6]=rs.getString("email_cli");
                registros[7]=rs.getString("dir_cli");
                modelo.addRow(registros);
                                
            }
            tbclientes.setModel(modelo);
            txtcant.setText(""+tbclientes.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(BuscarClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ClaseClienteItemStateChanged

    private void btnimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimprimirActionPerformed
        // TODO add your handling code here:
        SS.Clic();
        int fila=tbclientes.getSelectedRow();
        if(fila>=0){
            try {
                Conexion cc= new Conexion();
                String cliente=tbclientes.getValueAt(fila, 0).toString();
                Map parameter = new HashMap();
                InputStream dir;
                dir = getClass().getResourceAsStream("/Reportes/reportdetallecliente.jrxml");
                parameter.put("Codigo", cliente);
                JasperReport reportes=JasperCompileManager.compileReport(dir);
                JasperPrint print=JasperFillManager.fillReport(reportes, parameter,cc.conexion());
                JasperViewer view = new JasperViewer (print, false);
                view.setVisible(true);
            } catch (JRException e) {
                System.out.printf(e.getMessage());
            }}else{
                JOptionPane.showMessageDialog(null, "Seleccione algun elemento de la lista");
            }
    }//GEN-LAST:event_btnimprimirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ClaseCliente;
    private javax.swing.JButton btnimprimir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioclase;
    private javax.swing.JRadioButton radionombre;
    private javax.swing.JRadioButton radiotodo;
    private javax.swing.JTable tbclientes;
    private javax.swing.JTextField txtcant;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables

    Sonidos SS = new Sonidos(); 
    Conexion cc= new Conexion();
    Connection cn = cc.conexion();


}
